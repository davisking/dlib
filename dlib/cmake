# This is a CMake file meant to be included via include()
# It will trigger a compilation of dlib *in the project* 
# including it

cmake_minimum_required(VERSION 2.8.4)

set(DLIB_IN_PROJECT_BUILD true)

if (POLICY CMP0054)
    cmake_policy(SET CMP0054 NEW)
endif()


# Determine the path to dlib.
set(dlib_path ${CMAKE_CURRENT_LIST_DIR})
include(${dlib_path}/cmake_utils/add_global_compiler_switch.cmake)
include(${dlib_path}/cmake_utils/use_cpp_11.cmake)

if (CMAKE_COMPILER_IS_GNUCXX)
    # By default, g++ won't warn or error if you forget to return a value in a
    # function which requires you to do so.  This option makes it give a warning
    # for doing this.
    add_global_compiler_switch(-Wreturn-type)
endif()

include(${dlib_path}/cmake_utils/set_optimizations.cmake)

# Add folder containing dlib to the include search path.
INCLUDE_DIRECTORIES(${dlib_path}/..)

# This is really optional, but nice.  It will make sure the build mode 
# created by cmake is always release by default.
include(${dlib_path}/cmake_utils/release_build_by_default)


# Don't add dlib if it's already been added to the cmake project
if (NOT TARGET dlib)
    add_subdirectory(${dlib_path} dlib_build)
endif()

